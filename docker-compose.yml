version: "3.9"

services:
  go-server:
    build:
      context: ./server
    container_name: rest-server
    hostname: rest-server
    env_file:
      - .env
    environment:
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=eu-west-1
    networks:
      - mynet
    ports:
      - 3000:3000
    depends_on:
      - mongo

    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - ./server:/app
      - $HOME/.aws/credentials:/home/app/.aws/credentials:ro # for aws credentials

  # postgresdb:
  #   image: postgres:latest
  #   container_name: postgres
  #   environment:
  #     - POSTGRES_USER=${POSTGRES_USER}
  #     - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
  #     - POSTGRES_DB=${POSTGRES_DB}
  #     - POSTGRES_HOST=${POSTGRES_HOST}
  #     - POSTGRES_PORT=${POSTGRES_PORT}
  #   expose:
  #     - 5432
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - ./pg_data:/var/lib/postgresql/data
  #   networks:
  #     - mynet

  mongo:
    image: mongo:latest
    ports:
      - 3003:3003
    expose:
      - 3003
    restart: always
    container_name: mongo
    command: mongod --port=3003 --logpath /data/logs/mongolog.log --dbpath=/data/db
    env_file:
      - .env
    volumes:
      - mongo-data:/data/db
      - mongo-data:/data/logs
    networks:
      - mynet

volumes:
  pg_data:
  mongo-data:
    driver: local

networks:
  mynet:
    driver: bridge
